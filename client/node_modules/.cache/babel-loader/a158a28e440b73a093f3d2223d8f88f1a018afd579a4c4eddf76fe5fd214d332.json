{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrean paul sorono\\\\Desktop\\\\Errand Catcher\\\\ErrandCatcher\\\\client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport './map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng] = useState(123.8854);\n  const [lat] = useState(10.3157);\n  const [zoom] = useState(10);\n  const [API_KEY] = useState('ZQyqv6eWtI6zNE29SPDd');\n  useEffect(() => {\n    if (map.current) return; // stops map from initializing more than once\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: `https://api.maptiler.com/maps/streets-v2/style.json?key=${API_KEY}`,\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add control\n    map.current.addControl(new maplibregl.NavigationControl(), 'top-right');\n\n    // Fetch commissions from your API\n    fetch(\"http://localhost:8800/commission\").then(response => response.json()).then(commissions => {\n      // Loop through commissions\n      commissions.forEach(commission => {\n        // Geocode the commission location\n        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(commission.commissionLocation)}.json?access_token=${API_KEY}`).then(response => response.json()).then(data => {\n          // Use the first result's coordinates for the marker\n          const coordinates = data.features[0].center;\n\n          // Create a marker with popup\n          new maplibregl.Marker({\n            color: \"#FF0000\"\n          }).setLngLat(coordinates).setPopup(new maplibregl.Popup().setHTML(`<h3>${commission.commissionTitle}</h3>`)).addTo(map.current);\n        }).catch(error => {\n          console.error(error);\n        });\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [API_KEY, lng, lat, zoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"4H0bwVeF0ZgkHHbhWX3EvTASHWw=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useRef","useEffect","useState","maplibregl","jsxDEV","_jsxDEV","Map","_s","mapContainer","map","lng","lat","zoom","API_KEY","current","container","style","center","addControl","NavigationControl","fetch","then","response","json","commissions","forEach","commission","encodeURIComponent","commissionLocation","data","coordinates","features","Marker","color","setLngLat","setPopup","Popup","setHTML","commissionTitle","addTo","catch","error","console","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adrean paul sorono/Desktop/Errand Catcher/ErrandCatcher/client/src/components/Map.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\nimport './map.css';\r\n\r\nexport default function Map() {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng] = useState(123.8854);\r\n    const [lat] = useState(10.3157);\r\n    const [zoom] = useState(10);\r\n    const [API_KEY] = useState('ZQyqv6eWtI6zNE29SPDd');\r\n\r\n      useEffect(() => {\r\n        if (map.current) return; // stops map from initializing more than once\r\n    \r\n        map.current = new maplibregl.Map({\r\n            container: mapContainer.current,\r\n            style: `https://api.maptiler.com/maps/streets-v2/style.json?key=${API_KEY}`,\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n    \r\n        // Add control\r\n        map.current.addControl(new maplibregl.NavigationControl(), 'top-right');\r\n    \r\n        // Fetch commissions from your API\r\n        fetch(\"http://localhost:8800/commission\")\r\n            .then(response => response.json())\r\n            .then(commissions => {\r\n                // Loop through commissions\r\n                commissions.forEach(commission => {\r\n                    // Geocode the commission location\r\n                    fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(commission.commissionLocation)}.json?access_token=${API_KEY}`)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            // Use the first result's coordinates for the marker\r\n                            const coordinates = data.features[0].center;\r\n                            \r\n                            // Create a marker with popup\r\n                            new maplibregl.Marker({ color: \"#FF0000\" })\r\n                                .setLngLat(coordinates)\r\n                                .setPopup(new maplibregl.Popup().setHTML(`<h3>${commission.commissionTitle}</h3>`))\r\n                                .addTo(map.current);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error(error);\r\n                        });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, [API_KEY, lng, lat, zoom]);\r\n    \r\n  return (\r\n    <div className=\"map-wrap\">\r\n        <div ref={mapContainer} className=\"map\" />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}