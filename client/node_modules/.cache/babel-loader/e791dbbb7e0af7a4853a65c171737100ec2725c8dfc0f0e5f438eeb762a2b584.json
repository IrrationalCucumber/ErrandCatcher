{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrean paul sorono\\\\Desktop\\\\test\\\\client\\\\src\\\\pages\\\\AddAccount.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAccount = () => {\n  _s();\n  const [account, setAccount] = useState({\n    username: \"\",\n    password: \"\",\n    lname: \"\",\n    fname: \"\",\n    gender: \"\",\n    email: \"\",\n    contact: \"\",\n    age: \"\",\n    bday: \"\",\n    address: \"\",\n    desc: \"\",\n    type: \"\",\n    dateCreated: \"\",\n    profileImage: \"\"\n  });\n  const formatDate = dateString => {\n    // Input date format: MM/DD/YYYY\n    const [month, day, year] = dateString.split('/');\n    // Output date format: YYYY-MM-DD\n    return `${year}-${month}-${day}`;\n  };\n  //get current date\n  const getCurrentDate = () => {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed, so add 1\n    const day = String(currentDate.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAccount(prev => ({\n      ...prev,\n      [name]: name === 'userBirthday' ? formatDate(value) : value\n    }));\n  };\n  //save the data into db\n  const handleClick = async e => {\n    //refresh the page when button is clicked\n    e.preventDefault();\n    try {\n      account.dateCreated = getCurrentDate();\n      await axios.post('http://localhost:8800/user', account);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(account);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"from\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADD NEW ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      onChange: handleChange,\n      name: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"password\",\n      onChange: handleChange,\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Account type\",\n      onChange: handleChange,\n      name: \"type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAccount, \"sA9H6kZ9Er6RvtPx//Z/wlq8DxM=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAccount;\nexport default AddAccount;\n/**\r\n *      <input type=\"text\" placeholder='first name' onChange={handleChange} name='fname'/>\r\n      <input type=\"text\" placeholder='last name' onChange={handleChange} name='lname'/>\r\n      <input type=\"text\" placeholder='email' onChange={handleChange} name='email'/>\r\n      <input type=\"text\" placeholder='gender' onChange={handleChange} name='gender'/>\r\n */\nvar _c;\n$RefreshReg$(_c, \"AddAccount\");","map":{"version":3,"names":["axios","React","useState","useNavigate","jsxDEV","_jsxDEV","AddAccount","_s","account","setAccount","username","password","lname","fname","gender","email","contact","age","bday","address","desc","type","dateCreated","profileImage","formatDate","dateString","month","day","year","split","getCurrentDate","currentDate","Date","getFullYear","String","getMonth","padStart","getDate","navigate","handleChange","e","name","value","target","prev","handleClick","preventDefault","post","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adrean paul sorono/Desktop/test/client/src/pages/AddAccount.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AddAccount = () => {\r\n    const [account,setAccount] = useState({\r\n        username:\"\",\r\n        password:\"\",\r\n        lname:\"\",\r\n        fname:\"\",\r\n        gender:\"\",\r\n        email:\"\",\r\n        contact:\"\",\r\n        age:\"\",\r\n        bday:\"\",\r\n        address:\"\",\r\n        desc:\"\",\r\n        type:\"\",\r\n        dateCreated:\"\",\r\n        profileImage:\"\",\r\n    })\r\n    const formatDate = (dateString) => {\r\n        // Input date format: MM/DD/YYYY\r\n        const [month, day, year] = dateString.split('/');\r\n        // Output date format: YYYY-MM-DD\r\n        return `${year}-${month}-${day}`;\r\n      };\r\n      //get current date\r\n      const getCurrentDate = () => {\r\n        const currentDate = new Date();\r\n        const year = currentDate.getFullYear();\r\n        const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed, so add 1\r\n        const day = String(currentDate.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n      };\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAccount((prev) => ({\r\n          ...prev,\r\n          [name]: name === 'userBirthday' ? formatDate(value) : value,\r\n        }));\r\n      };\r\n    //save the data into db\r\n    const handleClick = async e =>{\r\n        //refresh the page when button is clicked\r\n        e.preventDefault()\r\n        try{\r\n            account.dateCreated = getCurrentDate();\r\n            await(axios.post('http://localhost:8800/user', account))\r\n            navigate(\"/\")\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    console.log(account)\r\n  return (\r\n    <div className='from'>\r\n      <h1>ADD NEW ACCOUNT</h1>\r\n      <input type=\"text\" placeholder='username' onChange={handleChange} name='username'/>\r\n      <input type=\"text\" placeholder='password' onChange={handleChange} name='password'/>\r\n      <input type=\"text\" placeholder='Account type' onChange={handleChange} name='type'/>\r\n      <button onClick={handleClick}>Add Account</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAccount\r\n/**\r\n *      <input type=\"text\" placeholder='first name' onChange={handleChange} name='fname'/>\r\n      <input type=\"text\" placeholder='last name' onChange={handleChange} name='lname'/>\r\n      <input type=\"text\" placeholder='email' onChange={handleChange} name='email'/>\r\n      <input type=\"text\" placeholder='gender' onChange={handleChange} name='gender'/>\r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}