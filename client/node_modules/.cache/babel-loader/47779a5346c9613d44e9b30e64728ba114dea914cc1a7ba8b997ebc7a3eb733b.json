{"ast":null,"code":"// Import the necessary library (axios in this case)\nimport axios from 'axios';\n\n// Your commission data (including addresses)\nconst commissions = [{\n  title: 'Commission 1',\n  address: '123 Main Street, City, Country'\n}\n// ... other commissions\n];\n\n// Your Google Geocoding API key\nconst API_KEY = 'your-google-api-key';\n\n// Loop through your commissions and make geocoding requests\ncommissions.forEach(async commission => {\n  try {\n    const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json`, {\n      params: {\n        address: commission.address,\n        key: API_KEY\n      }\n    });\n    const {\n      lat,\n      lng\n    } = response.data.results[0].geometry.location;\n    console.log(`Latitude: ${lat}, Longitude: ${lng}`);\n    // Now you can use lat and lng to create markers on the map\n  } catch (error) {\n    console.error(`Error geocoding address: ${error}`);\n  }\n});","map":{"version":3,"names":["axios","commissions","title","address","API_KEY","forEach","commission","response","get","params","key","lat","lng","data","results","geometry","location","console","log","error"],"sources":["C:/Users/adrean paul sorono/Desktop/Errand Catcher/ErrandCatcher/client/src/components/Map.js"],"sourcesContent":["// Import the necessary library (axios in this case)\r\nimport axios from 'axios';\r\n\r\n// Your commission data (including addresses)\r\nconst commissions = [\r\n    {\r\n        title: 'Commission 1',\r\n        address: '123 Main Street, City, Country'\r\n    },\r\n    // ... other commissions\r\n];\r\n\r\n// Your Google Geocoding API key\r\nconst API_KEY = 'your-google-api-key';\r\n\r\n// Loop through your commissions and make geocoding requests\r\ncommissions.forEach(async commission => {\r\n    try {\r\n        const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json`, {\r\n            params: {\r\n                address: commission.address,\r\n                key: API_KEY\r\n            }\r\n        });\r\n\r\n        const { lat, lng } = response.data.results[0].geometry.location;\r\n        console.log(`Latitude: ${lat}, Longitude: ${lng}`);\r\n        // Now you can use lat and lng to create markers on the map\r\n    } catch (error) {\r\n        console.error(`Error geocoding address: ${error}`);\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,WAAW,GAAG,CAChB;EACIC,KAAK,EAAE,cAAc;EACrBC,OAAO,EAAE;AACb;AACA;AAAA,CACH;;AAED;AACA,MAAMC,OAAO,GAAG,qBAAqB;;AAErC;AACAH,WAAW,CAACI,OAAO,CAAC,MAAMC,UAAU,IAAI;EACpC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,mDAAkD,EAAE;MAClFC,MAAM,EAAE;QACJN,OAAO,EAAEG,UAAU,CAACH,OAAO;QAC3BO,GAAG,EAAEN;MACT;IACJ,CAAC,CAAC;IAEF,MAAM;MAAEO,GAAG;MAAEC;IAAI,CAAC,GAAGL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ;IAC/DC,OAAO,CAACC,GAAG,CAAE,aAAYP,GAAI,gBAAeC,GAAI,EAAC,CAAC;IAClD;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAE,4BAA2BA,KAAM,EAAC,CAAC;EACtD;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}