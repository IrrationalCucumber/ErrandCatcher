{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isWithinInterval\r\n * @category Interval Helpers\r\n * @summary Is the given date within the interval?\r\n *\r\n * @description\r\n * Is the given date within the interval? (Including start and end.)\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @param {Interval} interval - the interval to check\r\n * @returns {Boolean} the date is within the interval\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} The start of an interval cannot be after its end\r\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\r\n *\r\n * @example\r\n * // For the date within the interval:\r\n * isWithinInterval(new Date(2014, 0, 3), {\r\n *   start: new Date(2014, 0, 1),\r\n *   end: new Date(2014, 0, 7)\r\n * })\r\n * //=> true\r\n *\r\n * @example\r\n * // For the date outside of the interval:\r\n * isWithinInterval(new Date(2014, 0, 10), {\r\n *   start: new Date(2014, 0, 1),\r\n *   end: new Date(2014, 0, 7)\r\n * })\r\n * //=> false\r\n *\r\n * @example\r\n * // For date equal to interval start:\r\n * isWithinInterval(date, { start, end: date }) // => true\r\n *\r\n * @example\r\n * // For date equal to interval end:\r\n * isWithinInterval(date, { start: date, end }) // => true\r\n */\nexport default function isWithinInterval(dirtyDate, interval) {\n  requiredArgs(2, arguments);\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  return time >= startTime && time <= endTime;\n}","map":{"version":3,"names":["toDate","requiredArgs","isWithinInterval","dirtyDate","interval","arguments","time","getTime","startTime","start","endTime","end","RangeError"],"sources":["C:/Users/Princess Halina/Desktop/IT/082323/ErrandCatcher/client/node_modules/date-fns/esm/isWithinInterval/index.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isWithinInterval\r\n * @category Interval Helpers\r\n * @summary Is the given date within the interval?\r\n *\r\n * @description\r\n * Is the given date within the interval? (Including start and end.)\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @param {Interval} interval - the interval to check\r\n * @returns {Boolean} the date is within the interval\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} The start of an interval cannot be after its end\r\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\r\n *\r\n * @example\r\n * // For the date within the interval:\r\n * isWithinInterval(new Date(2014, 0, 3), {\r\n *   start: new Date(2014, 0, 1),\r\n *   end: new Date(2014, 0, 7)\r\n * })\r\n * //=> true\r\n *\r\n * @example\r\n * // For the date outside of the interval:\r\n * isWithinInterval(new Date(2014, 0, 10), {\r\n *   start: new Date(2014, 0, 1),\r\n *   end: new Date(2014, 0, 7)\r\n * })\r\n * //=> false\r\n *\r\n * @example\r\n * // For date equal to interval start:\r\n * isWithinInterval(date, { start, end: date }) // => true\r\n *\r\n * @example\r\n * // For date equal to interval end:\r\n * isWithinInterval(date, { start: date, end }) // => true\r\n */\r\nexport default function isWithinInterval(dirtyDate, interval) {\r\n  requiredArgs(2, arguments);\r\n  var time = toDate(dirtyDate).getTime();\r\n  var startTime = toDate(interval.start).getTime();\r\n  var endTime = toDate(interval.end).getTime();\r\n\r\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\r\n  if (!(startTime <= endTime)) {\r\n    throw new RangeError('Invalid interval');\r\n  }\r\n  return time >= startTime && time <= endTime;\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAC5DH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,IAAIC,IAAI,GAAGN,MAAM,CAACG,SAAS,CAAC,CAACI,OAAO,CAAC,CAAC;EACtC,IAAIC,SAAS,GAAGR,MAAM,CAACI,QAAQ,CAACK,KAAK,CAAC,CAACF,OAAO,CAAC,CAAC;EAChD,IAAIG,OAAO,GAAGV,MAAM,CAACI,QAAQ,CAACO,GAAG,CAAC,CAACJ,OAAO,CAAC,CAAC;;EAE5C;EACA,IAAI,EAAEC,SAAS,IAAIE,OAAO,CAAC,EAAE;IAC3B,MAAM,IAAIE,UAAU,CAAC,kBAAkB,CAAC;EAC1C;EACA,OAAON,IAAI,IAAIE,SAAS,IAAIF,IAAI,IAAII,OAAO;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}