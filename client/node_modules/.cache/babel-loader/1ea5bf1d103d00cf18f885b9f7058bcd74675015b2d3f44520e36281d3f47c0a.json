{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isDate\r\n * @category Common Helpers\r\n * @summary Is the given value a date?\r\n *\r\n * @description\r\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n *\r\n * @param {*} value - the value to check\r\n * @returns {boolean} true if the given value is a date\r\n * @throws {TypeError} 1 arguments required\r\n *\r\n * @example\r\n * // For a valid date:\r\n * const result = isDate(new Date())\r\n * //=> true\r\n *\r\n * @example\r\n * // For an invalid date:\r\n * const result = isDate(new Date(NaN))\r\n * //=> true\r\n *\r\n * @example\r\n * // For some value:\r\n * const result = isDate('2014-02-31')\r\n * //=> false\r\n *\r\n * @example\r\n * // For an object:\r\n * const result = isDate({})\r\n * //=> false\r\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","map":{"version":3,"names":["_typeof","requiredArgs","isDate","value","arguments","Date","Object","prototype","toString","call"],"sources":["C:/Users/Princess Halina/Desktop/IT/082323/ErrandCatcher/client/node_modules/date-fns/esm/isDate/index.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isDate\r\n * @category Common Helpers\r\n * @summary Is the given value a date?\r\n *\r\n * @description\r\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n *\r\n * @param {*} value - the value to check\r\n * @returns {boolean} true if the given value is a date\r\n * @throws {TypeError} 1 arguments required\r\n *\r\n * @example\r\n * // For a valid date:\r\n * const result = isDate(new Date())\r\n * //=> true\r\n *\r\n * @example\r\n * // For an invalid date:\r\n * const result = isDate(new Date(NaN))\r\n * //=> true\r\n *\r\n * @example\r\n * // For some value:\r\n * const result = isDate('2014-02-31')\r\n * //=> false\r\n *\r\n * @example\r\n * // For an object:\r\n * const result = isDate({})\r\n * //=> false\r\n */\r\nexport default function isDate(value) {\r\n  requiredArgs(1, arguments);\r\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,mCAAmC;AACvD,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EACpCF,YAAY,CAAC,CAAC,EAAEG,SAAS,CAAC;EAC1B,OAAOD,KAAK,YAAYE,IAAI,IAAIL,OAAO,CAACG,KAAK,CAAC,KAAK,QAAQ,IAAIG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACN,KAAK,CAAC,KAAK,eAAe;AAC1H"},"metadata":{},"sourceType":"module","externalDependencies":[]}